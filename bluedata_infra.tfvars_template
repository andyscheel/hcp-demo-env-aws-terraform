#
# Select an appropriate region and availability zone
#

profile            = "default"
region             = "eu-west-2"
az                 = "eu-west-2a"

#
# Set this to something meaningful.  it is used as a tag in aws 
#

project_id         = "csnow-scratch"
user               = "csnow"

#
# Before setting the vpc cidr block, manually verify the vpc cidr doesn't already exist in your region
#

vpc_cidr_block     = "10.1.0.0/16"
subnet_cidr_block  = "10.1.0.0/24"

# This project requirs a client cidr block to be set to allow access to the aws vpc from your client machine
# Most users will set the client cidr block automatically using the terraform CLI, e.g.
#
# `terraform apply ... -var="client_cidr_block=$(curl -s http://ifconfig.me/ip)/32" ...`
#
# The above approach retrieves the internet IP of your gateway connection to the internet.
# The benefit of using the CLI is that if you change networks frequently (e.g. mobile users), you can simply
# run the `terraform apply ...` command again and it will update the AWS network ACL with your new address.
# If your client is always on the same network and you don't wish to set your client cidr block with the CLI,
# you can set this address below.

# client_cidr_block  = "x.x.x.x/32"


# Set the check_client_ip to true to check if the current client_ip is inside the client_cidr_block
# If the client_ip isn't inside the client_cidr_block, you won't be able to connect to the VPN from your client machine.

check_client_ip  = "true" 

#
# You need two pre-created elastic IP address.  Add the details here.
#

eip_controller = "1.2.3.4"
eip_gateway = "1.2.3.4"

#
# gateway, controller and workers all share the same ami and ssh pubic key
#

ec2_ami            = "ami-00846a67" # this is valid for the London region, change if required
                                    #
                                    # Ireland    : ami-3548444c
                                    # N.Virginia : ami-02eac2c0129f6376b ?
                                    # Ohio       : ami-e1496384 ?
                                    # 

# you may need to change the instance types if the ones
# listed below are not available in your region

gtw_instance_type  = "m4.2xlarge"
ctr_instance_type  = "m4.2xlarge"
wkr_instance_type  = "m4.2xlarge"

# the path to your ssh private key on your local machine
# use double \\ for windows paths

ssh_prv_key_path   = "/home/snowch/.ssh/id_rsa" 
ssh_pub_key_path   = "/home/snowch/.ssh/id_rsa.pub" 

#
# software download url
#

# ask your BlueData sales contact to provide you with the url

epic_dl_url          = "enter url"
epic_rpm_dl_url      = "https://dzf8vqv24eqhg.cloudfront.net/userfiles/7467/9720/ckfinder/files/4.0/EPIC40_RPM-List_CentOS-7x.txt" 

#
# cloudwatch 
#

# check every hour between 8pm to 8am MON to FRI for any running EC2 instances
# that were started by this terraform project and halt them

ec2_shutdown_schedule_expression = "cron(0 20-23,0-8 ? * MON-FRI *)" # UTC time

# set to false to prevent automatic halting of instances

ec2_shutdown_schedule_is_enabled = true
